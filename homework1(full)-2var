// kucherin12.02.20.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include "stdlib.h"
#include "stdio.h"
#include "math.h"
#include "fstream"

using namespace std;


void input(int a[], int n);
void input2(int** a, int n, int m);
void output(int a[], int n);
void output2(int** a, int n, int m);
int maxind(int a[], int n);
int minind(int a[], int n);
int sumpos(int a[], int n);
int indsrznach(int a[], int n);
int charstr(int** a, int n, int m);


int main()
{
	setlocale(LC_ALL, "Russian");

	/*
	cout << "zadanie1a" << endl; // Определить индекс элемента, значение которого наиболее близко к среднему значению элементов массива
	
	int n, * a;
	
	cout << "количество элементов n = ";
	cin >> n;
	a = new int[n];
	input(a, n);
	cout << "Первоначальный массив" << endl;
	output(a, n);
	cout << endl;
	cout << "Индекс = " << indsrznach(a, n) << endl;

	/*
	Входные данные:	n = 5

	Первоначальный массив: 5  4  1  7  3

	Вывод:	Среднее значение = 4

	        Индекс = 1  

	Мой ответ: Индекс = 1
	*/

	/*
	cout << "zadanie1b" << endl; // Найти минимальный элемент среди положительных элементов заданного массива
	int n, * a;

	cout << "количество элементов n = ";
	cin >> n;
	a = new int[n];
	input(a, n);
	cout << "Первоначальный массив" << endl;
	output(a, n);
	cout << endl;

	cout << "Минимальный элемент среди положительных элементов = " << minind(a, n) << endl;

	/*
	Входные данные:	n = 5

	Первоначальный массив: -1  3  4  9  1

	Вывод:	Минимальный элемент среди положительных элементов = 1

	Мой ответ: Минимальный элемент среди положительных элементов = 1
	*/

	/*
	cout << "zadanie1c" << endl; // Вычислить сумму элементов массива, расположенных до первого отрицательного элемента

	int n, * a;

	cout << "количество элементов n = ";
	cin >> n;
	a = new int[n];
	input(a, n);
	cout << "Первоначальный массив" << endl;
	output(a, n);
	cout << endl;
	cout << "Cумма элементов до первого отрицательного элемента = " << sumpos(a, n) << endl;

	/*
    Входные данные:	n = 5

	Первоначальный массив: 5  4  9  -1  8

	Вывод:	Cумма элементов до первого отрицательного элемента = 18

	Мой ответ: Cумма элементов до первого отрицательного элемента = 18
	*/
	

	cout << "zadanie2" << endl; // Найти номер столбца с минимальной характеристикой
	int** a, n, m;

	cout << endl << "количество строк n = ";
	cin >> n;
	cout << "количество столбцов m = ";
	cin >> m;
	a = new int* [n];
	for (int i = 0; i < n; i++)
	{
		a[i] = new int[m];
	}
	input2(a, n, m);
	cout << "Первоначальный массив" << endl;
	output2(a, n, m);
	cout << endl;
	cout << endl << charstr(a, n, m) << " столбец имеет минимальную характеристику" << endl;
	
	/*
	Входные данные:	количество строк n = 5
	                количество столбцов m = 4

	Первоначальная матрица
	-59  -33  34   0
	 69   24 -22  58
	 62  -36   5  45
	-19  -73  61  -9
	 95   42 -73 -64


	Вывод: 3 столбец имеет минимальную характеристику

	Мой ответ: 3 столбец имеет минимальную характеристику
	*/

	return 0;
}


void input(int a[], int n) // Заполняет одномерный массив элементами с клавиатуры
{
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
	}
} // end input

void input2(int** a, int n, int m)	// Заполняет матрицу случайными элементами
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			a[i][j] = rand() % 200 - 100;
		}
	}
} // end input2

void output(int a[], int n)	// Вывод массива
{
	for (int i = 0; i < n; i++)
	{
		cout << a[i] << "  ";
	}
} // end output

void output2(int** a, int n, int m)	// Вывод матрицы
{
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			printf("%5d", a[i][j]);
		}
		cout << endl;
	}
} // end output2

int maxind(int a[], int n) // функция ищет макимальный элемент в массиве
{
	int max = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i] > max) max = a[i];
	}
	return max;
} // end maxind

int minind(int a[], int n) // функция минимального элемента в массиве
{
	int min = maxind(a, n);
	for (int i = 0; i < n; i++)
	{
		if ((a[i] > 0) && (a[i] < min)) min = a[i];
	}
	return min;
}

int sumpos(int a[], int n)	// функция ищет сумму пзитивных элементов
{
	int i, sum = 0;
	for (i = 0; i < n; i++)
	{
		if (a[i] < 0) return sum;
		else sum += a[i];
	}
	return sum;
}

int indsrznach(int a[], int n) // функция ищет индекс элемента, близкого к среднему значению элементов массива
{
	int sum = 0, m = 0, j;
	for (int i = 0; i < n; i++)
	{
		sum += a[i];
	}
	m = sum / n;
	cout << "Cреднее значение =  " << m << endl;
	for (j = m; j < maxind(a, n); j++)
	{
		for (int i = 0; i < n; i++)
		{
			if (a[i] == j) return i;
		}
	}
} // end indsrznach

int charstr(int** a, int n, int m) // Ищет характеристику столбца матрицы. Характеристика столбца - сумма модулей его отрицательных нечетных элементов
{
	int i, j, sum=0, min= 1000001, k=0;
	for (j = 0; j < m; j++)
	{
		sum = 0;
		for (i = 0; i < n; i++)
		{
			if ((a[i][j] < 0) && (abs(a[i][j]) % 2 != 0)) sum += abs(a[i][j]);
		}
		if (sum < min)
		{
			min = sum;
			sum = 0;
			k = j;
		}
	}
	return k;
} // end charstr
